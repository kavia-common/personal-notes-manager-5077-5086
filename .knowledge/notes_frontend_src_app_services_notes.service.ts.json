{"is_source_file": true, "format": "TypeScript", "description": "This file defines the NotesService class, which manages notes and categories in a note-taking application. It provides methods for adding, updating, deleting notes, managing categories, filtering notes based on category and search term, and persisting data in local storage.", "external_files": ["../models/note.model"], "external_methods": ["signal", "signal.asReadonly()"], "published": ["NotesService"], "classes": [{"name": "NotesService", "description": "A service class responsible for managing notes and categories, including operations such as add, update, delete, filter, and persistence."}], "methods": [{"name": "loadFromStorage", "description": "Loads notes and categories from local storage, initializing with default categories if storage is unavailable or corrupted."}, {"name": "persist", "description": "Saves the current notes and categories state to local storage."}, {"name": "addNote", "description": "Adds a new note, assigning it a unique ID and timestamps, then persists the change."}, {"name": "updateNote", "description": "Updates an existing note and persists the change."}, {"name": "deleteNote", "description": "Deletes a note by ID and updates storage."}, {"name": "setCategory", "description": "Sets the currently selected category for filtering notes."}, {"name": "setSearchTerm", "description": "Sets the search term for filtering notes."}, {"name": "addCategory", "description": "Adds a new category if it does not already exist."}, {"name": "function generateId() { generateId", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["this.getLocalStorage()", "localStorage.getItem()", "localStorage.setItem()", "JSON.parse()", "JSON.stringify()", "this._categories.set()", "this._notes.set()", "this._categories().some()", "this._categories().push()", "this._notes().filter()", "this._notes()", "signal()", "signal.asReadonly()"], "search-terms": ["NotesService", "local storage persistence", "category filtering", "search filtering", "generateId", "Angular service", "notes management", "category management"], "state": 2, "file_id": 22, "knowledge_revision": 92, "git_revision": "", "revision_history": [{"48": ""}, {"82": ""}, {"85": ""}, {"92": ""}], "ctags": [{"_type": "tag", "name": "CATEGORY_KEY", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-5077-5086/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^const CATEGORY_KEY = 'notes_app_categories';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "NotesService", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-5077-5086/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^export class NotesService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-5077-5086/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^const STORAGE_KEY = 'notes_app_data';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "_notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-5077-5086/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  private _notes = signal<Note[]>([]);$/", "language": "TypeScript", "kind": "property", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "catArray", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-5077-5086/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    let catArray: Category[] = [$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "cats", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-5077-5086/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const cats = [...this._categories()];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "catsRaw", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-5077-5086/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const catsRaw = localStorage.getItem(CATEGORY_KEY);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "exists", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-5077-5086/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const exists = this._categories().some(cat => cat.name.toLowerCase() === name.toLowerCase())/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "generateId", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-5077-5086/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^function generateId() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-5077-5086/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const idx = notes.findIndex(n => n.id === note.id);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "loaded", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-5077-5086/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^          const loaded = JSON.parse(catsRaw);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "localStorage", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-5077-5086/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const localStorage = this.getLocalStorage();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "matchesCategory", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-5077-5086/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^        const matchesCategory =$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "matchesSearch", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-5077-5086/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^        const matchesSearch =$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "newCat", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-5077-5086/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const newCat = { id: generateId(), name: name };$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "noteArr", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-5077-5086/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^          const noteArr = JSON.parse(notesRaw);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-5077-5086/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const notes = [...this._notes()];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "notesRaw", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-5077-5086/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const notesRaw = localStorage.getItem(STORAGE_KEY);$/", "language": "TypeScript", "kind": "constant"}], "hash": "79d65e62dea3d4b828b51e7b0da26ea3", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/notes.service.ts", "fields": [{"name": "private _notes = signal<Note[]>([]);", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}, {"name": "let catArray: Category[] = [", "scope": "", "scopeKind": "", "description": "unavailable"}]}